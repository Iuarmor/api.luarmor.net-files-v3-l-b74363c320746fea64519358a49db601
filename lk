getgenv().crosshair = {
    enabled = true,
    refreshrate = 0,
    mode = 'center', -- Ensure the crosshair stays in the center
    position = Vector2.new(0, 0),

    width = 1.5,
    length = 10,
    radius = 11,
    color = Color3.fromRGB(196, 40, 28),

    spin = true,
    spin_speed = 150,
    spin_max = 340,
    spin_style = Enum.EasingStyle.Sine,

    resize = true,
    resize_speed = 150,
    resize_min = 5,
    resize_max = 22,
}

local old; old = hookfunction(Drawing.new, function(class, properties)
    local drawing = old(class)
    for i, v in next, properties or {} do
        drawing[i] = v
    end
    return drawing
end)

local runservice = game:GetService('RunService')
local inputservice = game:GetService('UserInputService')
local tweenservice = game:GetService('TweenService')
local camera = workspace.CurrentCamera

local last_render = 0

local drawings = {
    crosshair = {},
    text = {Drawing.new('Text', {Size = 13, Font = 2, Outline = true, Text = 'Lorenlol', Color = Color3.new(1, 1, 1)}),
            Drawing.new('Text', {Size = 13, Font = 2, Outline = true, Text = ".lua"}),},
}

for idx = 1, 8 do
    drawings.crosshair[idx] = Drawing.new('Line')
end

function solve(angle, radius)
    return Vector2.new(
        math.sin(math.rad(angle)) * radius,
        math.cos(math.rad(angle)) * radius
    )
end

runservice.PostSimulation:Connect(function()

    local _tick = tick()

    if _tick - last_render > crosshair.refreshrate then
        last_render = _tick

        -- Always use the center of the screen
        local position = camera.ViewportSize / 2

        local text_x = drawings.text[1].TextBounds.X + drawings.text[2].TextBounds.X

        drawings.text[1].Visible = crosshair.enabled
        drawings.text[2].Visible = crosshair.enabled

        if crosshair.enabled then
            drawings.text[1].Position = position + Vector2.new(-text_x / 2, crosshair.radius + (crosshair.resize and crosshair.resize_max or crosshair.length) + 15)
            drawings.text[2].Position = drawings.text[1].Position + Vector2.new(drawings.text[1].TextBounds.X)
            drawings.text[2].Color = crosshair.color
            
            for idx = 1, 4 do
                local outline = drawings.crosshair[idx]
                local inline = drawings.crosshair[idx + 4]
    
                local angle = (idx - 1) * 90
                local length = crosshair.length
    
                if crosshair.spin then
                    local spin_angle = -_tick * crosshair.spin_speed % crosshair.spin_max
                    angle = angle + tweenservice:GetValue(spin_angle / 360, crosshair.spin_style, Enum.EasingDirection.InOut) * 360
                end
    
                if crosshair.resize then
                    local resize_length = tick() * crosshair.resize_speed % 180
                    length = crosshair.resize_min + math.sin(math.rad(resize_length)) * crosshair.resize_max
                end
    
                inline.Visible = true
                inline.Color = crosshair.color
                inline.From = position + solve(angle, crosshair.radius)
                inline.To = position + solve(angle, crosshair.radius + length)
                inline.Thickness = crosshair.width
    
                outline.Visible = true
                outline.From = position + solve(angle, crosshair.radius - 1)
                outline.To = position + solve(angle, crosshair.radius + length + 1)
                outline.Thickness = crosshair.width + 1.5    
            end
        else
            for idx = 1, 8 do
                drawings.crosshair[idx].Visible = false
            end
        end

    end
end)

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer
local Mouse = LocalPlayer:GetMouse()
local CamlockState = false
local enemy = nil
local Camera = workspace.CurrentCamera

-- Function to find the nearest enemy (closest to the center of the screen)
local function FindNearestEnemy()
    local ClosestDistance, ClosestPlayer = math.huge, nil
    local CenterPosition = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)

    for _, Player in ipairs(Players:GetPlayers()) do
        if Player ~= LocalPlayer then
            local Character = Player.Character
            if Character and Character:FindFirstChild("HumanoidRootPart") then
                local Position, IsVisibleOnViewport = Camera:WorldToViewportPoint(Character.HumanoidRootPart.Position)
                if IsVisibleOnViewport then
                    local Distance = (CenterPosition - Vector2.new(Position.X, Position.Y)).Magnitude
                    if Distance < ClosestDistance then
                        ClosestPlayer = Player
                        ClosestDistance = Distance
                    end
                end
            end
        end
    end

    return ClosestPlayer
end

-- **12000% Blatant Aiming & Firing (Perfect Precision, Never Miss a Shot)**
local function AimAtEnemy(enemy)
    if enemy then
        local targetPosition = enemy.Character.HumanoidRootPart.Position  -- Lock onto the HumanoidRootPart

        -- **Instant Camera Snap: Snapping camera to enemyâ€™s exact position with NO transition**
        Camera.CFrame = CFrame.new(Camera.CFrame.Position, targetPosition)  -- Instantly lock camera to enemy

        -- **Instant Mouse Snap: Snapping the mouse to the enemy position**
        local screenPosition = Camera:WorldToScreenPoint(targetPosition)
        if screenPosition then
            -- **Instantly move the mouse to the target position with NO delay**
            Mouse.Move:Fire(screenPosition.X, screenPosition.Y)  -- Instant mouse snap to target
        end

        -- **Auto-Shooting without Delay: Instant continuous fire, perfect timing**
        AutoShootAtEnemy(enemy)
    end
end

-- **12000% Auto-Shooting (Perfect Accuracy) - Never Miss, Even if Target Moves**
local function AutoShootAtEnemy(enemy)
    if enemy then
        local gun = LocalPlayer.Character:FindFirstChildOfClass("Tool")
        if gun and gun:FindFirstChild("Fire") then
            -- **Infinite fire rate: Fire without ANY cooldown or checks**
            while CamlockState and enemy do
                -- Fire immediately at the enemy's position every frame with **ZERO delay**
                gun.Fire:FireServer()  -- Fire instantly, with no delay or checks

                -- **Firing on every render step ensures the shots hit every time**
                RunService.RenderStepped:Wait()  -- Fire continuously without missing
            end
        end
    end
end

-- **Perfect Aim Adjustment (Never Miss)**
RunService.Heartbeat:Connect(function()
    if CamlockState and enemy then
        -- Constantly adjust the aim to follow the enemy's exact position, even while moving
        AimAtEnemy(enemy)
    else
        CamlockState = false  -- Disable lock if no valid enemy is found
        enemy = nil
    end
end)

-- **GUI for toggling the 12000% Aimbot**
local ThreatGui = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local UICorner = Instance.new("UICorner")
local UIStroke = Instance.new("UIStroke")
local TextButton = Instance.new("TextButton")

ThreatGui.Name = "ThreatGui"
ThreatGui.Parent = game.CoreGui
ThreatGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

Frame.Parent = ThreatGui
Frame.BackgroundColor3 = Color3.fromRGB(128, 187, 219)
Frame.BackgroundTransparency = 0.5
Frame.BorderSizePixel = 0
Frame.Position = UDim2.new(0.133798108, 0, 0.20107238, 0)
Frame.Size = UDim2.new(0, 202, 0, 70)
Frame.Active = true
Frame.Draggable = true

UICorner.Parent = Frame
UIStroke.Parent = Frame
UIStroke.Color = Color3.fromRGB(0, 0, 0)
UIStroke.Thickness = 3
UIStroke.Transparency = 0.6

TextButton.Parent = Frame
TextButton.BackgroundColor3 = Color3.fromRGB(128, 128, 128)
TextButton.BackgroundTransparency = 0.5
TextButton.BorderSizePixel = 0
TextButton.Position = UDim2.new(0.05, 0, 0.05, 0)
TextButton.Size = UDim2.new(0.9, 0, 0.5, 0)
TextButton.Font = Enum.Font.SciFi
TextButton.Text = "Loren: OFF"
TextButton.TextColor3 = Color3.fromRGB(128, 187, 219)
TextButton.TextTransparency = 0.7
TextButton.TextScaled = true
TextButton.TextWrapped = true

-- **Toggle function for 12000% Aimbot**
local state = false
TextButton.MouseButton1Click:Connect(function()
    state = not state
    if state then
        TextButton.Text = "Loren: ON"
        CamlockState = true
        enemy = FindNearestEnemy()  -- Find the nearest enemy
        if enemy then
            print("Enemy found:", enemy.Name)
        end
    else
        TextButton.Text = "Loren: OFF"
        CamlockState = false
        enemy = nil
        print("Camlock turned off")
    end
end)
